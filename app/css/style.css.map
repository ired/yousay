{"version":3,"sources":["../../bower_components/susy/sass/susy/language/susy/_box-sizing.scss","../../bower_components/susy/sass/susy/output/support/_rem.scss","style.scss","../../bower_components/susy/sass/susy/language/susy/_container.scss","../../bower_components/susy/sass/susy/output/support/_clearfix.scss","../../bower_components/susy/sass/susy/language/susy/_span.scss","style.css"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["// Susy Box Sizing\n// =================\n\n// Global Box Sizing\n// -----------------\n// Set a box model globally on all elements.\n// - [$box]: border-box | content-box\n// - [$inherit]: true | false\n@mixin global-box-sizing(\n  $box: susy-get(global-box-sizing),\n  $inherit: false\n) {\n  $inspect: $box;\n\n  @if $inherit {\n    @at-root {\n       html { @include output((box-sizing: $box)); }\n       *, *:before, *:after { box-sizing: inherit; }\n     }\n  } @else {\n    *, *:before, *:after { @include output((box-sizing: $box)); }\n  }\n\n  @include susy-inspect(global-box-sizing, $inspect);\n  @include update-box-model($box);\n}\n\n// Border Box Sizing\n// -----------------\n// A legacy shortcut...\n// - [$inherit]: true | false\n@mixin border-box-sizing(\n  $inherit: false\n) {\n  @include global-box-sizing(border-box, $inherit);\n}\n\n// Update Box Model\n// ----------------\n// PRIVATE: Updates global box model setting\n@mixin update-box-model(\n  $box\n) {\n  @if $box != susy-get(global-box-sizing) {\n  @include susy-set(global-box-sizing, $box);\n  }\n}\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","@import \"../../bower_components/susy/sass/susy\";\n\n$susy: (\n  columns: 12,\n  global-box-sizing: border-box,\n  debug: (image:hide)\n  );\n\n// vars:\n$mobileWidth: 100%;\n$mobilePlusWidth: span(10);\n$bigWidth: span(8);\n$mainColor: hsl(341,91%,57%); \n$sayColor: hsl(202, 67%, 57%);\n$shareColor: hsl(75, 82%, 40%);\n\n\n@include border-box-sizing;\n\n.cf:after  {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  font-family: 'Roboto', sans-serif;\n  font-weight: bold;\n  -webkit-font-smoothing: antialiased;\n  font-size: 16px;\n  &.new {\n    background-color: $sayColor;\n  }\n  &.share {\n    background-color: $shareColor;\n  }\n}\n\na {\n    border-bottom: 4px solid $mainColor;\n    \n    &:link, &:visited, &:hover, &:focus, &:active {\n      text-decoration: none;\n      color: #000;\n    }\n}\n\n.container {\n  @include container();\n}\n\n.snap-content {\n  background-color: #fff;\n  padding-bottom: 100px;\n  //box-shadow: 1px 0 7px black;\n  .new & {\n    background-color: $sayColor;\n  }\n  .share & {\n    background-color: $shareColor;\n  }\n}\n\n.snap-drawer {\n  background-color: #000;\n  padding: 15px;\n  color: #fff;\n}\n\n.logo {\n  // margin: 15px 0 160px 0;\n  margin: 0 auto 65px auto;\n  width: 70%;\n\n\n  h1 {\n    text-align: center;\n    // font-size: 4.5em;\n    // line-height: 1.1em;\n    border: 5px solid $mainColor;\n    font-size: 2.7em;\n    line-height: 1.1em;\n    margin: 0;\n    padding: 5px 0;\n    > a {\n      border: none;\n      &:link, &:visited, &:hover, &:focus, &:active {\n        color: #fff;\n        text-transform: uppercase;\n        text-decoration: none;\n      }\n    }\n  }\n\n  hr {\n    height: 5px;\n    width: 140px;\n    border: 0;\n    margin: -10px auto 0 auto;\n    background-color: $mainColor;\n  }\n\n  // hr {\n  //   height: 5px;\n  //   width: 140px;\n  //   border: 0;\n  //   margin: -5.1em auto 0 auto;\n  //   background-color: $mainColor;\n  // }\n}\n\n.menu {\n  text-align: center;\n  list-style-type: none;\n  \n  font-size: 2.7em;\n  //line-height: 2.7em;\n\n  padding: 0;\n  margin: 0;\n\n\n  li {\n    margin-bottom: 30px;\n    \n    a {\n        border-bottom: 5px solid $sayColor;\n      &:link, &:visited, &:hover, &:focus, &:active {\n        text-decoration: none;\n        color: #fff;\n      }\n    }\n    \n    &:nth-child(2) {\n      a {\n        border-bottom: 5px solid $shareColor;\n      }\n    }\n  }\n\n}\n.content-view {\n  position: relative;\n}\n\n.message-wrapper, \n.form-wrapper, \n.share-wrapper {\n  position: relative;\n  display: block;\n  top: 35px;\n  font-size: 3.4em;\n  line-height: 1em;\n\n  width: $mobileWidth;\n\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0 15px;\n\n  @media (min-width: 420px) {\n    font-size: 4em;\n    top: 45px;\n    width: $mobilePlusWidth;\n  }\n  @media (min-width: 768px) {\n    font-size: 5em;\n    top: 55px;\n    width: $bigWidth;\n  }\n}\n\n.message-wrapper {\n  .icons {\n    text-align: center;\n    margin-top: 90px;\n    width: 50%;\n    svg {\n      //border: 3px solid black;\n      border-radius: 1em;\n      padding: .17em;\n      outline: none;\n    }\n  }\n  .share_icon {\n    float: left;\n    cursor: pointer;\n    svg {\n      fill: #fff;\n      background-color: $shareColor;\n    }\n  }\n  .replay_icon {\n    float: right;\n    cursor: pointer;\n    svg {\n      fill: #fff;\n      background-color: $mainColor;\n    }\n  }\n}\n\n.message {\n  text-decoration: none;\n  color: #000;\n  cursor: pointer;\n  word-wrap: break-word;\n  .blink {\n    color: $mainColor;\n    font-size: 1.1em;\n  }\n} \n\n.menu_button {\n  background-color: $mainColor;\n  position: relative;\n  border: none;\n  width: 48px;\n  height: 45px;\n  text-indent: -900em;\n  overflow: hidden;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n  margin: 15px;\n  &:after {\n    content: '';\n    position: absolute;\n    width: 68%;\n    height: 5px;\n    background: #fff;\n    top: 10px;\n    left: 16%;\n    box-shadow: 0 10px 0 #fff, 0 20px 0 #fff;\n  }\n\n  .new & {\n    background-color: $shareColor;\n  }\n  .share & {\n    background-color: #744783;\n  }\n}\n\n.form-wrapper {\n\n  form {\n    display: inline-block;\n    text-decoration: none;\n    color: #fff;\n    width: 100%;\n\n    label {\n      display: inline-block;\n      margin-bottom: 15px;\n    }\n\n    textarea {\n      padding: 15px;\n      width: 100%;\n      border: 5px solid #fff;\n      background: transparent;\n      display: block; // get rid of extra space\n      &:focus {\n        outline: none;\n        //border: 5px solid #10689a;\n      }\n    }\n\n    button {\n      font-size: .9em;\n      // background-color: #10689a;\n      background-color: $mainColor;\n      border: none;\n      color: #fff;\n      width: auto;\n      cursor: pointer;\n      display: inline-block;\n      padding: 5px 15px;\n      border-radius: 2px;\n      margin: 15px 0 0 0;\n    }\n  }\n\n  .input_count {\n    float: right;\n    font-size: .5em;\n    line-height: .7em;\n    margin: 15px 0 0 0;\n    // margin: -45px 10px 0 0;\n  }\n}\n\n.share-wrapper {\n  color: #fff;\n  line-height: 1.1em;\n  .no_say{\n    font-size: 1em;\n  }\n\n  .share {\n    margin: 0;\n    word-wrap: break-word;\n    dt{\n      font-size: 1em;\n      line-height: 1em;\n      color: #744783;\n      padding: 0;\n      margin: 0 0 15px 0;\n      &+dd{\n        font-size: 1em;\n        line-height: 1em;\n        margin: 0 0 50px 0;\n      }\n    }\n\n    dt:nth-of-type(2) {\n      font-size: .8em;\n      line-height: 1em;\n      color: yellow;\n      &+dd{\n        font-size: .4em;\n        line-height: 1.2em;\n        background-color: yellow;\n        border-radius: 2px;\n        padding: 15px;\n      }\n    }\n\n    a {\n      border-bottom: 4px solid $sayColor;\n      //word-wrap: break-word;\n    }\n  }\n  p {\n    margin:0;\n    padding:0;\n  }\n\n}\n\n\n/// typewrite styles\n\n@keyframes blink-it { \n  0% { opacity:1 }\n  50% { opacity:0 }\n  100% { opacity:1 }\n}\n\n.blink{\n  animation:blink-it steps(1) 1s infinite\n}\n\n// angular rule\n[ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {\n  display: none !important;\n}","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","*, *:before, *:after {\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box; }\n\n.cf:after {\n  content: \"\";\n  display: table;\n  clear: both; }\n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  font-family: 'Roboto', sans-serif;\n  font-weight: bold;\n  -webkit-font-smoothing: antialiased;\n  font-size: 16px; }\n  html.new, body.new {\n    background-color: #48a5db; }\n  html.share, body.share {\n    background-color: #90ba12; }\n\na {\n  border-bottom: 4px solid #f52e6d; }\n  a:link, a:visited, a:hover, a:focus, a:active {\n    text-decoration: none;\n    color: #000; }\n\n.container {\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto; }\n  .container:after {\n    content: \" \";\n    display: block;\n    clear: both; }\n\n.snap-content {\n  background-color: #fff;\n  padding-bottom: 100px; }\n  .new .snap-content {\n    background-color: #48a5db; }\n  .share .snap-content {\n    background-color: #90ba12; }\n\n.snap-drawer {\n  background-color: #000;\n  padding: 15px;\n  color: #fff; }\n\n.logo {\n  margin: 0 auto 65px auto;\n  width: 70%; }\n  .logo h1 {\n    text-align: center;\n    border: 5px solid #f52e6d;\n    font-size: 2.7em;\n    line-height: 1.1em;\n    margin: 0;\n    padding: 5px 0; }\n    .logo h1 > a {\n      border: none; }\n      .logo h1 > a:link, .logo h1 > a:visited, .logo h1 > a:hover, .logo h1 > a:focus, .logo h1 > a:active {\n        color: #fff;\n        text-transform: uppercase;\n        text-decoration: none; }\n  .logo hr {\n    height: 5px;\n    width: 140px;\n    border: 0;\n    margin: -10px auto 0 auto;\n    background-color: #f52e6d; }\n\n.menu {\n  text-align: center;\n  list-style-type: none;\n  font-size: 2.7em;\n  padding: 0;\n  margin: 0; }\n  .menu li {\n    margin-bottom: 30px; }\n    .menu li a {\n      border-bottom: 5px solid #48a5db; }\n      .menu li a:link, .menu li a:visited, .menu li a:hover, .menu li a:focus, .menu li a:active {\n        text-decoration: none;\n        color: #fff; }\n    .menu li:nth-child(2) a {\n      border-bottom: 5px solid #90ba12; }\n\n.content-view {\n  position: relative; }\n\n.message-wrapper,\n.form-wrapper,\n.share-wrapper {\n  position: relative;\n  display: block;\n  top: 35px;\n  font-size: 3.4em;\n  line-height: 1em;\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0 15px; }\n  @media (min-width: 420px) {\n    .message-wrapper,\n    .form-wrapper,\n    .share-wrapper {\n      font-size: 4em;\n      top: 45px;\n      width: 83.05085%; } }\n  @media (min-width: 768px) {\n    .message-wrapper,\n    .form-wrapper,\n    .share-wrapper {\n      font-size: 5em;\n      top: 55px;\n      width: 66.10169%; } }\n\n.message-wrapper .icons {\n  text-align: center;\n  margin-top: 90px;\n  width: 50%; }\n  .message-wrapper .icons svg {\n    border-radius: 1em;\n    padding: .17em;\n    outline: none; }\n\n.message-wrapper .share_icon {\n  float: left;\n  cursor: pointer; }\n  .message-wrapper .share_icon svg {\n    fill: #fff;\n    background-color: #90ba12; }\n\n.message-wrapper .replay_icon {\n  float: right;\n  cursor: pointer; }\n  .message-wrapper .replay_icon svg {\n    fill: #fff;\n    background-color: #f52e6d; }\n\n.message {\n  text-decoration: none;\n  color: #000;\n  cursor: pointer;\n  word-wrap: break-word; }\n  .message .blink {\n    color: #f52e6d;\n    font-size: 1.1em; }\n\n.menu_button {\n  background-color: #f52e6d;\n  position: relative;\n  border: none;\n  width: 48px;\n  height: 45px;\n  text-indent: -900em;\n  overflow: hidden;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n  margin: 15px; }\n  .menu_button:after {\n    content: '';\n    position: absolute;\n    width: 68%;\n    height: 5px;\n    background: #fff;\n    top: 10px;\n    left: 16%;\n    box-shadow: 0 10px 0 #fff, 0 20px 0 #fff; }\n  .new .menu_button {\n    background-color: #90ba12; }\n  .share .menu_button {\n    background-color: #744783; }\n\n.form-wrapper form {\n  display: inline-block;\n  text-decoration: none;\n  color: #fff;\n  width: 100%; }\n  .form-wrapper form label {\n    display: inline-block;\n    margin-bottom: 15px; }\n  .form-wrapper form textarea {\n    padding: 15px;\n    width: 100%;\n    border: 5px solid #fff;\n    background: transparent;\n    display: block; }\n    .form-wrapper form textarea:focus {\n      outline: none; }\n  .form-wrapper form button {\n    font-size: .9em;\n    background-color: #f52e6d;\n    border: none;\n    color: #fff;\n    width: auto;\n    cursor: pointer;\n    display: inline-block;\n    padding: 5px 15px;\n    border-radius: 2px;\n    margin: 15px 0 0 0; }\n\n.form-wrapper .input_count {\n  float: right;\n  font-size: .5em;\n  line-height: .7em;\n  margin: 15px 0 0 0; }\n\n.share-wrapper {\n  color: #fff;\n  line-height: 1.1em; }\n  .share-wrapper .no_say {\n    font-size: 1em; }\n  .share-wrapper .share {\n    margin: 0;\n    word-wrap: break-word; }\n    .share-wrapper .share dt {\n      font-size: 1em;\n      line-height: 1em;\n      color: #744783;\n      padding: 0;\n      margin: 0 0 15px 0; }\n      .share-wrapper .share dt + dd {\n        font-size: 1em;\n        line-height: 1em;\n        margin: 0 0 50px 0; }\n    .share-wrapper .share dt:nth-of-type(2) {\n      font-size: .8em;\n      line-height: 1em;\n      color: yellow; }\n      .share-wrapper .share dt:nth-of-type(2) + dd {\n        font-size: .4em;\n        line-height: 1.2em;\n        background-color: yellow;\n        border-radius: 2px;\n        padding: 15px; }\n    .share-wrapper .share a {\n      border-bottom: 4px solid #48a5db; }\n  .share-wrapper p {\n    margin: 0;\n    padding: 0; }\n\n@keyframes blink-it {\n  0% {\n    opacity: 1; }\n  50% {\n    opacity: 0; }\n  100% {\n    opacity: 1; } }\n\n.blink {\n  animation: blink-it steps(1) 1s infinite; }\n\n[ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {\n  display: none !important; }\n"],"sourceRoot":"/source/"}